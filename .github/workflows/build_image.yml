name: build xiaozhi esp32 client images
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      # install env
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Set up QEMU (optional)
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # login docker
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set tag
      - name: Get Latest Tag
        run: echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Set image name and tag
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "Git_Tag=ghcr.io/${{ github.actor }}/xiaozhi_esp32_client_mqtt_udp:${TAG_NAME}" >> $GITHUB_ENV
            echo "Git_Latest=ghcr.io/${{ github.actor }}/xiaozhi_esp32_client_mqtt_udp:latest" >> $GITHUB_ENV
          fi

      - name: Build and publish image for main branch or tag push event
        run: |
          docker buildx build \
          -f Dockerfile \
          --platform linux/amd64 \
          --label "org.opencontainers.image.description=xiaozhi esp32 client image" \
          --push \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache \
          -t ${Git_Tag} \
          -t ${Git_Latest} \
          .